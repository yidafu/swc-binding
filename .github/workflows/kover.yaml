name: Measure coverage

on:
  pull_request:

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: linux-x86_64
            os: linux-20.04
            target: x86_64-unknown-linux-gnu
            bin: swc_jni
            name: swc_jni-linux-x86_64.tar.gz
            command: build

          - release_for: linux-aarch64
            os: linux-20.04
            target: aarch64-unknown-linux-gnu
            bin: swc_jni
            name: swc_jni-linux-aarch64.tar.gz
            command: build

          - release_for: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: swc_jni.exe
            name: swc_jni-Windows-x86_64.zip
            command: build

          - release_for: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: swc_jni
            name: swc_jni-Darwin-x86_64.tar.gz
            command: build
          - release_for: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: swc_jni
            name: swc_jni-Darwin-aarch64.tar.gz
            command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true


  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: 'x86_64-unknown-linux-gnu,arm-unknown-linux-gnueabihf,x86_64-pc-windows-msvc'
      - run: bash ./setup-ubuntu.sh
      - run: cd swc-jni && cargo build --release && ls target && cp target/release/libswc_jni.so ../swc-binding/src/main/resources/linux-x64-gnu
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
      - name: Generate kover coverage report
        run: ./gradlew koverXmlReport
      - name: Add coverage report to PR
        id: kover
        uses: mi-kas/kover-report@v1
        with:
          path: |
            ${{ github.workspace }}/swc-binding/build/reports/kover/report.xml
          title: Code Coverage
          token: ${{ secrets.PR_TOKEN }}
          update-comment: true
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          coverage-counter-type: LINE
